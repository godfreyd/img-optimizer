load_module /etc/nginx/modules/ngx_http_image_filter_module.so;

user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    keepalive_timeout  65;

    proxy_cache_path /var/cache/nginx/resize_cache keys_zone=resize_cache:10m max_size=1G;

    # parse s3 store in uri
    map $uri $s3_store {
        ~^/(?<s3>.+?)/.*    $s3;
        default             '';
    }
    
    # parse size variant in uri
    map $uri $resize_variant {
        ~^/(.+?)/(?<variant>\d+/\d+?)/.*    $variant;
        default                             '';
    }

    # parse s3_uri variant in uri
    map $uri $s3_uri {
        ~^/(.+?)/\d+/\d+/(.+?)/(?<path>.*)    $path;
        default                             '';
    }

    # validate s3 store
    map $s3_store $is_valid_s3_store {
        via.placeholder.com    1;
        default           0;
    }

    # validate resize variant
    map $resize_variant $is_valid_resize_variant {
        24/24       1;
        200/200     1;
        default     0;
    }

    resolver 8.8.8.8;

    server {

        listen 8080;

        server_name _;

        error_log /dev/stderr info;
        access_log /dev/stdout;

        location / {
            proxy_pass              http://localhost:8081;
            proxy_intercept_errors  on;
            expires 30d;
            add_header Pragma public;
            add_header Cache-Control "public";
            error_page 502 =200 @origin;
        }

        location @origin {
            proxy_pass  "https://${s3_store}/${s3_uri}";
        }
    }

    server {

        listen 8081;

        server_name _;

        error_log /dev/stderr info;
        access_log /dev/stdout;

        set $is_valid 1;

        if ($is_valid_s3_store != 1) {
            set $is_valid 0;
        }

        if ($is_valid_resize_variant != 1) {
            set $is_valid 0;
        }

        if ($is_valid != 1) {
            return 404;
        }
      
        error_page 415 = @error;

        image_filter_interlace on;
        image_filter_sharpen 70;

        location ~ /(.+?)/(\d+)/(\d+)/resize/.+ {
            rewrite             ^/(.+?)/(\d+)/(\d+)/resize/(?<file_path>.*) /$file_path break;
            proxy_pass          "https://${s3_store}";
            image_filter        resize $2 $3;
        }

        location ~ /(.+?)/(\d+)/(\d+)/crop/.+ {
            rewrite             ^/(.+?)/(\d+)/(\d+)/crop/(?<file_path>.*) /$file_path break;
            proxy_pass          "https://${s3_store}";
            image_filter        crop $2 $3;
        }

        location @error {
            return 502;
        }
    }
}
